Há duas opções para utilizar o jQuery:
1 -   baixar o arquivo jQuery (salvar link como) -> https://jquery.com/download/
1.1 - a versão adequada para uso é 'Download the compressed, production jQuery ...'
1.2 - incluir o código na tag <head></head> do arquivo -> <script src="local e nome do arquivo .js"></script>
2 - incluir o link cdn no arquivo
2.1 - link da página -> https://code.jquery.com/
2.2 - é interessante utilizar a versão uncompressed
2.3 - basta clicar em uma das opções e copiar o link parecido com o código abaixo e colar no arquivo html
<script
src="https://code.jquery.com/jquery-3.3.1.js"
integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60="
crossorigin="anonymous">
</script>

$ -> utilizado para acessar os recursos do jQuery

#Seletores
1 - selecionar elemento por tag -> $(tag)
2 - selecionar elemento por classe -> $(.classe)
3 - selecionar elemento por id -> $(#id)
4 - selecionar elementos por classe de tag específica -> $('div.exemplo1')
5 - selecionar elementos por classe de classe específica -> $('.lista2 .exemplo2')
6 - atuação sobre o array de retorno dos elementos selecionados -> $('.lista1 .exemplo2')
7 - seleciona o primeiro item do array -> $('.lista1 .exemplo2:first')
8 - seleciona o último elemento do array -> $('.lista1 .exemplo2:last')
9 - seleciona os elementos com índices pares do array -> $('.lista1 .exemplo2:even')
10 - seleciona os elementos com índices ímpares do array -> $('.lista1 .exemplo2:odd')

#Sequencia de execução de código
1 - independente de onde estiver o código, o script somente será executado após todos os elementos da página estiverem carregados 
2 - sintaxe1 -> $(document).ready(function(){ 
					function teste() {
						console.log($('#exemplo'))
					}
				})
2.1 - sintaxe2 -> function teste() {
						console.log($('#exemplo'))
					}

					$(teste)

2.2 - sintaxe3 -> $(function teste() {
					console.log($('#exemplo'))
				})

#Manipulando os atributos dos elementos HTML
1 - selecione o elemento html (id ($('#id'), classe ($('.classe')), tag ($('tag'))) seguido de .attr(<nome do atributo>, <definir valor do atributo opcional>) 
2 - sintaxe -> <img src="esfera_1.png" border="5" /> //tag HTML com atributos
				<div style="background-color: red; width: 100px; height: 100px"></div> //div com style
				<input type="text" value="Eu sou um input"/>
				$(document).ready(function() {
					console.log($('img').attr('src')) ///selecionando o atributo da tag img
					console.log($('img').attr('border', 20)) //definindo valor para o atributo border da tag img
					console.log($('div').attr('style', 'background-color: blue; width: 300px; height: 100px')) //alterando o atributo style da div
					console.log($('input').attr('value', 'teste')) //alterando o valor do input
				})

#Manipulando o conteúdo interno de elementos HTML
1 - selecione o elemento html (id ($('#id'), classe ($('.classe')), tag ($('tag'))) seguido de .html(<opcional setar novo conteúdo>)
2 - sintaxe -> <div id="div1" style="border:solid 1px #000; width:150px; height:150px  ">Div 1</div>

				$(document).ready(() => {
					console.log('conteudo div 1:', $('#div1').html()) //recuperando o conteúdo interno
					console.log($('#div1').html('teste'))             //setando novo valor na div; substitui todo o conteúdo do elemento HTML
				})

#Recuperando e manipulando elementos HTML
1 - sintaxe -> // val() -> capturar o value
				// :checked -> capturar somente o selecionado

				// $.each(array, callback(indice, valor)) //loop de repetição que percorre um array de elementos HTML

				$('#nome').val() //selecionando value do campo text
				$('#nome').val('Jota') //setando valores no campo text

				$('#origem').val() //selecionando campo do select
				$('#origem').val(3) //setando valores para o select

				$('.sexo:checked').val() //selecionando (pela classe) valores selecionados do radio 

				$('.interesse:checked').val() //selecionando (pela classe) valores selecionados do checkbox

				$.each($('interesse:checked'), (indice, valor) => {
					console.log(indice, valor)
				})

#Inserindo e removendo elementos HTML
1 - sintaxe -> // append, prepend (inner tag) -> insere elemento dentro de um elemento com abertura e fechamento de tag
				// append -> insere no final de um elemento
				// prepend -> insere no início do elemento

				$('#lista1').prepend('<li>Item antes</li>') //início
				$('#lista1').append('<li>Item depois</li>') // final

				$('#lista2').prepend('<div>Item antes</div>') //início
				$('#lista2').append('<div>Item depois</div>') //final
				
				// after, before -> usado em tags que não encapsulam conteúdo
				// after -> insere o elemento depois e fora de outro elemento HTML 
				// before -> insere o elemento antes e fora de outro elemento HTML 

				$('#lista2').before('<p>Eu fui inserido antes da div</p>') //inserindo parágrafo antes da div
				$('#lista2').after('<p>Eu fui inserido depois após a div</p>') //inserindo parágrafo depois da div

				// .html('valor') -> substitui todo o conteúdo do elemento
				// $('#lista2').html('<p>Eu substitui todo o conteúdo que estava aqui</p>') 

				// .remove() -> remove elemento HTML
				$('.item2').remove() //o elemento com essa classe será removido
